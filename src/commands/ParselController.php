<?php

/**
 * @author John Snook
 * @date Jul 23, 2018
 * @license https://snooky.biz/site/license
 * @copyright 2018 John Snook Consulting
 * Description of ParselController
 */

namespace johnsnook\parsel\commands;

use johnsnook\parsel\ParselQuery;
use johnsnook\parsel\models\Script;
use yii\db\Expression;
use yii\console\widgets\Table;
use yii\helpers\Console as C;

/**
 * Tests for Yii2-Parsel
 */
class ParselController extends \yii\console\Controller {

    /**
     * You need help, man.
     */
    public function actionIndex() {
        $this->help();
    }

    private static function help() {
        echo "Usage: Yii parsel/parsel/q 'userQuer' [options] [limit]\n";
        echo "\tExample search: 'character:george AND elaine'\n\n";
        echo "flags:\n";
        echo "\th: help\n";
        echo "\td: data (default)\n";
        echo "\ts: SQL generated by search\n";
        echo "\tq: database query object\n\n";
        echo "\tt: tokens from lexer\n\n";
        echo "\tp: parser query array\n\n";
        echo "limit: the number of records to display.  Defaults to 10.\n";
    }

    /**
     * Searches the Seinfeld script database
     * @param string $userSearch tExample search: 'character:george AND elaine
     * @param string $flags h: help d:data s:SQL t:Tokens
     * @param integer $limit the number of rows to display
     */
    public function actionQ($userSearch = '', $flags = 'd', $limit = 10) {
        if (strpos($flags, 'h' !== false) || empty($userSearch)) {
            $this->help();
            exit();
        }


        /**
         * to give a full example, we'll join with a parent table and use an
         * expression to search a non-text field
         */
        $season = new Expression("to_char(season, '99')");
        $episode = new Expression("to_char(episode, '99')");
        $air_date = new Expression("to_char(air_date, 'Mon dd, yyyy')");

        /**
         * @var array The fields to search with ParselQuery
         */
        $fields = [
            'character',
            'dialog',
            'seid',
            'season' => $season,
            'episode' => $episode,
            'air_date' => $air_date
        ];


        $parsel = new ParselQuery([
            'userQuery' => $userSearch,
            'searchFields' => $fields,
            'dbQuery' => Script::find()
                    ->select(array_merge(['script.id',], $fields))
                    ->leftJoin('episode e', 'episode_id = e.id')
                    ->orderBy(['script.id' => SORT_ASC])
                    ->limit($limit)
        ]);

        if ($parsel->lastError) {
            echo C::ansiFormat($parsel->lastError, [C::BG_RED, C::BOLD, C::FG_BLACK]);
        }

        if (strpos($flags, 't') !== false) {
            dump($parsel->tokens);
        }

        if (strpos($flags, 'p') !== false) {
            dump($parsel->queryParts);
        }

        if (strpos($flags, 'q') !== false) {
            dump($parsel->dbQuery);
        }

        if (strpos($flags, 's') !== false) {
            echo $parsel->sql;
        }

        if (strpos($flags, 'd') !== false) {
            //echo "Result count: " . $parsel->dbQuery->count() . PHP_EOL;

            $rows = [];
            $query = $parsel->dbQuery;

            $parsel->profile[] = ["Execute query" => new \DateTime()];
            $lines = $query->all();
            $parsel->profile[] = ["Finished" => new \DateTime()];

            foreach ($lines as $line) {
                $rows[] = [$line->character, $line->dialog, $line->seid];
            }

            echo Table::widget([
                'headers' => ['Character', 'Line', 'Episode'],
                'rows' => $rows,
            ]);
            if (strpos($flags, 'm') !== false) {
                $rows = [];
                $fmt = '%r%f ms';
                for ($i = 1; $i < count($parsel->profile); $i++) {
                    $key1 = array_keys($parsel->profile[$i - 1])[0];
                    $t1 = array_values($parsel->profile[$i - 1])[0];
                    $t2 = array_values($parsel->profile[$i])[0];
                    $diff = $t1->diff($t2);
                    $rows[] = [$key1, $diff->format($fmt)];
                }

                $t1 = array_values($parsel->profile[0])[0];
                $t2 = array_values($parsel->profile[count($parsel->profile) - 1])[0];
                $diff = $t1->diff($t2);
                $rows[] = ['Total', $diff->format($fmt)];

                echo Table::widget([
                    'headers' => ['Action', 'Time'],
                    'rows' => $rows,
                ]);
            }
        }
    }

}
